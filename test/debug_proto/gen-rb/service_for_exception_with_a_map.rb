#
# Autogenerated by Thrift Compiler (0.9.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

module ServiceForExceptionWithAMap
  class Client
    include ::Thrift::Client

    def methodThatThrowsAnException()
      send_methodThatThrowsAnException()
      recv_methodThatThrowsAnException()
    end

    def send_methodThatThrowsAnException()
      send_message('methodThatThrowsAnException', MethodThatThrowsAnException_args)
    end

    def recv_methodThatThrowsAnException()
      result = receive_message(MethodThatThrowsAnException_result)
      raise result.xwamap unless result.xwamap.nil?
      return
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class MethodThatThrowsAnException_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class MethodThatThrowsAnException_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    XWAMAP = 1

    FIELDS = {
      XWAMAP => {:type => ::Thrift::Types::STRUCT, :name => 'xwamap', :class => ::ExceptionWithAMap}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  # SERVICE MOCK

  class Mock
    def methodThatThrowsAnException()
    end

  end
end

